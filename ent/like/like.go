// Code generated by entc, DO NOT EDIT.

package like

const (
	// Label holds the string label denoting the like type in the database.
	Label = "like"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUserID holds the string denoting the user_id field in the database.
	FieldUserID = "user_id"
	// EdgeRestaurant holds the string denoting the restaurant edge name in mutations.
	EdgeRestaurant = "restaurant"
	// Table holds the table name of the like in the database.
	Table = "likes"
	// RestaurantTable is the table the holds the restaurant relation/edge.
	RestaurantTable = "likes"
	// RestaurantInverseTable is the table name for the Restaurant entity.
	// It exists in this package in order to avoid circular dependency with the "restaurant" package.
	RestaurantInverseTable = "restaurants"
	// RestaurantColumn is the table column denoting the restaurant relation/edge.
	RestaurantColumn = "restaurant_likes"
)

// Columns holds all SQL columns for like fields.
var Columns = []string{
	FieldID,
	FieldUserID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "likes"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"restaurant_likes",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
