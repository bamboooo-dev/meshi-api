// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (l *LikeQuery) CollectFields(ctx context.Context, satisfies ...string) *LikeQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		l = l.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return l
}

func (l *LikeQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *LikeQuery {
	return l
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (r *RestaurantQuery) CollectFields(ctx context.Context, satisfies ...string) *RestaurantQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		r = r.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return r
}

func (r *RestaurantQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *RestaurantQuery {
	return r
}
